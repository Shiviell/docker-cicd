pipeline {
    agent any

    environment {
        GIT_URL = 'http://gitlab.satixfy.lan/sw_host/buildroot.git'
        GIT_CREDENTIALS_ID = 'git-credentials-id'
        REGISTRY_CREDS = 'dockerRepoSatixfy'
        DOCKER_REPO = 'satixfy-repo.devopshift.com'
        DOCKER_IMAGE_NAME = "${DOCKER_REPO}/buildroot/buildroot"
        DOCKER_IMAGE_TAG = "1.00.0"
        DOCKER_FILE = 'buildroot.Dockerfile'
        DOCKER_ARTIFACT_FILE = 'buildroot.artifacts.Dockerfile'
        WORKSPACEFOLDER = '/home/vagrant/work/tmp/jenkins/docker-cicd/volume/workspace/buildroot/'
    }

    stages {
        stage('Clone repository') {
            steps {
                git branch: 'jenkins_docker', credentialsId: GIT_CREDENTIALS_ID, url: GIT_URL
            }
        }

        stage('Pull Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://satixfy-repo.devopshift.com', REGISTRY_CREDS) {
                        docker.image("${DOCKER_IMAGE_NAME}-cicd:${DOCKER_IMAGE_TAG}").pull()
                    }
                }
            }
        }

        stage('Run Build Container') {
            steps {
                script {
                    docker.withRegistry('https://satixfy-repo.devopshift.com', REGISTRY_CREDS) {
                        def buildImage = docker.image("${DOCKER_IMAGE_NAME}-cicd:${DOCKER_IMAGE_TAG}")
                        // buildImage.inside("-v ${WORKSPACEFOLDER}:/src/linux/buildroot/buildroot") {
                        //     // /src/linux/buildroot/buildroot 
                        //     // The build process is started by the container's entrypoint
                        // }
                        // Define the Docker run command with the desired entrypoint or command
                        def runCommand = "docker run --rm --name my-build-container -v ${WORKSPACEFOLDER}:/src/linux/buildroot/buildroot ${DOCKER_IMAGE_NAME}-cicd:${DOCKER_IMAGE_TAG}"
                        def cleanContainer = "docker rm my-build-container"
                        // Execute the Docker run command
                        sh(runCommand)
                        




                    }
                }
            }
        }

        stage('Build and Publish Artifact Image') {
            steps {
                script {
                    docker.withRegistry('https://satixfy-repo.devopshift.com', REGISTRY_CREDS) {
                        def app = docker.build("${DOCKER_REPO}/buildroot/buildroot-artifact:${env.BUILD_NUMBER}", "-f ${DOCKER_ARTIFACT_FILE} .")
                        app.push()
                    }
                }
            }
        }
    }

    triggers {
        pollSCM('H/5 * * * *')
    }
}
