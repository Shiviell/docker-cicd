//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Eldan.ServiceMonitor.MailReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MailReference.IWCFMailService")]
    public interface IWCFMailService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFMailService/SendMail", ReplyAction="http://tempuri.org/IWCFMailService/SendMailResponse")]
        string[] SendMail(string From, string To, string CC, string Bcc, string Subject, string Body, string Attachments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFMailService/SendMail", ReplyAction="http://tempuri.org/IWCFMailService/SendMailResponse")]
        System.Threading.Tasks.Task<string[]> SendMailAsync(string From, string To, string CC, string Bcc, string Subject, string Body, string Attachments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFMailService/SendMailNew", ReplyAction="http://tempuri.org/IWCFMailService/SendMailNewResponse")]
        string[] SendMailNew(string From, string[] To, string[] CC, string[] Bcc, string Subject, string Body, string[] Attachments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWCFMailService/SendMailNew", ReplyAction="http://tempuri.org/IWCFMailService/SendMailNewResponse")]
        System.Threading.Tasks.Task<string[]> SendMailNewAsync(string From, string[] To, string[] CC, string[] Bcc, string Subject, string Body, string[] Attachments);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCFMailServiceChannel : Eldan.ServiceMonitor.MailReference.IWCFMailService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCFMailServiceClient : System.ServiceModel.ClientBase<Eldan.ServiceMonitor.MailReference.IWCFMailService>, Eldan.ServiceMonitor.MailReference.IWCFMailService {
        
        public WCFMailServiceClient() {
        }
        
        public WCFMailServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WCFMailServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFMailServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFMailServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[] SendMail(string From, string To, string CC, string Bcc, string Subject, string Body, string Attachments) {
            return base.Channel.SendMail(From, To, CC, Bcc, Subject, Body, Attachments);
        }
        
        public System.Threading.Tasks.Task<string[]> SendMailAsync(string From, string To, string CC, string Bcc, string Subject, string Body, string Attachments) {
            return base.Channel.SendMailAsync(From, To, CC, Bcc, Subject, Body, Attachments);
        }
        
        public string[] SendMailNew(string From, string[] To, string[] CC, string[] Bcc, string Subject, string Body, string[] Attachments) {
            return base.Channel.SendMailNew(From, To, CC, Bcc, Subject, Body, Attachments);
        }
        
        public System.Threading.Tasks.Task<string[]> SendMailNewAsync(string From, string[] To, string[] CC, string[] Bcc, string Subject, string Body, string[] Attachments) {
            return base.Channel.SendMailNewAsync(From, To, CC, Bcc, Subject, Body, Attachments);
        }
    }
}
