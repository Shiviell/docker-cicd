# Use the official Microsoft .NET SDK image to build the application
FROM mcr.microsoft.com/dotnet/framework/sdk:4.8 AS build-env
WORKDIR /app

# Copy csproj and restore any dependencies
COPY . ./
RUN powershell -Command \
    msbuild /t:restore


# COPY DLL from required builds - 
# image TypeExtensions
# COPY --from=eldan/type-extensions /app/TypeExtensions.dll /app/out/
# Copy the rest of the files and build
RUN powershell -Command \
    dotnet publish -c Release -o out

# # Generate nuget package
# # NOTE! Assuming you have a .nuspec file in OUR project directory
# # Replace 'YourPackageName' with your actual package name and '1.0.0' with your package version
ARG BUILD_NUMBER
RUN powershell -Command \
    dotnet pack /p:PackageVersion=$env:BUILD_NUMBER -o nugets




# # Upload artifacts to nexus
ARG NEXUS_API_KEY
RUN powershell -Command \
    echo "NEXUS_API_KEY=$env:NEXUS_API_KEY"
RUN powershell -Command \
    dotnet nuget push "nugets\*.nupkg" --api-key $env:NEXUS_API_KEY --source "https://eldan-repo.devopshift.com/nexus/repository/nuget-hosted/"


# # Generate the runtime image
# FROM mcr.microsoft.com/dotnet/aspnet:6.0
# ENV PROJECTNAME=LoggerBase
# WORKDIR /app
# COPY --from=build-env /app/out .
# ENTRYPOINT ["dotnet", "LoggerBase.dll"]
