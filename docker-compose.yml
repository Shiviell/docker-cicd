# version: '3.1'
services:
    jenkins:
        build: ./jenkins/master
        image: eldan-repo.devopshift.com/jenkins-master:1.0
        container_name: jenkins
        ports:
            - '8080:8080'
            - '50000:50000'
        networks:
            - jb
    jenkins-slave:
        build: ./jenkins/slave
        image: eldan-repo.devopshift.com/jenkins-slave:1.0
        # Removed container name to support scale out option
        #container_name: jenkins-slave
        restart: always
        environment:
            - 'JENKINS_URL=http://jenkins:8080/jenkins/'
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock  # Expose the docker daemon in the container
            - ./volume:/home/jenkins # Avoid mysql volume mount issue
        networks:
        - jb
        depends_on:
            - jenkins

    nginx:
      image: nginx:1.25.3-alpine
      restart: unless-stopped
      hostname: eldan-repo.devopshift.com
      volumes:
        - ./jenkins/nginx/conf/nginx-cicd.conf:/etc/nginx/conf.d/nginx-cicd.conf
        - ./jenkins/nginx/letsencrypt/archive/eldan-repo.devopshift.com/:/etc/certificates
      ports:
        - "80:80"
        - "443:443"
        # - "5001:5000"
      command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
      # entrypoint: sleep 6000
      depends_on:
        - jenkins
        - nexus
      networks:
        - jb

    sonarqube:
      image: sonarqube:lts-community
      depends_on:
        - sonar_db
      environment:
        SONAR_JDBC_URL: jdbc:postgresql://sonar_db:5432/sonar
        SONAR_JDBC_USERNAME: sonar
        SONAR_JDBC_PASSWORD: sonar
      ports:
        - "9000:9000"
      volumes:
        - sonarqube_conf:/opt/sonarqube/conf
        - sonarqube_data:/opt/sonarqube/data
        - sonarqube_extensions:/opt/sonarqube/extensions
        - sonarqube_logs:/opt/sonarqube/logs
        - sonarqube_temp:/opt/sonarqube/temp
      networks:
        - jb
    sonar_db:
      image: postgres:13
      environment:
        POSTGRES_USER: sonar
        POSTGRES_PASSWORD: sonar
        POSTGRES_DB: sonar
      volumes:
        - sonar_db:/var/lib/postgresql
        - sonar_db_data:/var/lib/postgresql/data
      networks:
        - jb

    nexus:
          image: sonatype/nexus3
          restart: unless-stopped
          volumes:
            - ./volume-nexus/data:/nexus-data
          environment:
            - NEXUS_CONTEXT=nexus
          ports:
            - 8085:8081
          user: root
          networks:
          - jb



    code-server:
      image: yanivomc/codeserver
      restart: unless-stopped
      volumes:
        # - /home/vagrant/work/:/home/coder/project
        - /home/azureuser/.config/code-server/config.yaml:/root/.config/code-server/config.yaml
        # Mount Docker socket
        - /var/run/docker.sock:/var/run/docker.sock
      environment:
        - PASSWORD=098123
        - TZ=Asia/Jerusalem
      ports:
        - "5005:8080"
      networks:
        - jb


networks:
  jb:

volumes:
  nexus-data:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonarqube_temp:
  sonar_db:
  sonar_db_data:

